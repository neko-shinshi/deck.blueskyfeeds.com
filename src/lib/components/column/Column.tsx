
// Use React-Window to handle recycling and visibility
// After scroll, if item is in view, refresh it
// When scroll to bottom, trigger pull
//  https://stackoverflow.com/questions/56810406/tracking-visibility-of-items-rendered-by-react-window

import {useSortable} from "@dnd-kit/sortable";
import {CSS} from "@dnd-kit/utilities";
import ColumnTypePosts from "@/lib/components/column/ColumnTypePosts";
import ColumnTypeThread from "@/lib/components/column/ColumnTypeThread";
import ColumnTypeSettings from "@/lib/components/column/ColumnTypeSettings";
import clsx from "clsx";
import {useSelector} from "react-redux";
import ColumnTypeLoading from "@/lib/components/column/ColumnTypeLoading";
import {StoreState} from "@/lib/utils/redux/store";
import {ColumnModeThread} from "@/lib/utils/types-constants/column";


const remText = {
    '20': 'w-[20rem]',
    '21': 'w-[21rem]',
    '22': 'w-[22rem]',
    '23': 'w-[23rem]',
    '24': 'w-[24rem]',
    '25': 'w-[25rem]',
    '26': 'w-[26rem]',
    '27': 'w-[27rem]',
    '28': 'w-[28rem]',
    '29': 'w-[29rem]',
    '30': 'w-[30rem]',
    '31': 'w-[31rem]',
    '32': 'w-[32rem]',
    '33': 'w-[33rem]',
    '34': 'w-[34rem]',
    '35': 'w-[35rem]',
    '36': 'w-[36rem]',
    '37': 'w-[37rem]',
    '38': 'w-[38rem]',
    '39': 'w-[39rem]',
    '40': 'w-[40rem]',
    '41': 'w-[41rem]',
    '42': 'w-[42rem]',
    '43': 'w-[43rem]',
    '44': 'w-[44rem]',
    '45': 'w-[45rem]',
    '46': 'w-[46rem]',
    '47': 'w-[47rem]',
    '48': 'w-[48rem]',
    '49': 'w-[49rem]',
    '50': 'w-[50rem]',
    '20.1': 'w-[20.1rem]',
    '20.2': 'w-[20.2rem]',
    '20.3': 'w-[20.3rem]',
    '20.4': 'w-[20.4rem]',
    '20.5': 'w-[20.5rem]',
    '20.6': 'w-[20.6rem]',
    '20.7': 'w-[20.7rem]',
    '20.8': 'w-[20.8rem]',
    '20.9': 'w-[20.9rem]',
    '21.1': 'w-[21.1rem]',
    '21.2': 'w-[21.2rem]',
    '21.3': 'w-[21.3rem]',
    '21.4': 'w-[21.4rem]',
    '21.5': 'w-[21.5rem]',
    '21.6': 'w-[21.6rem]',
    '21.7': 'w-[21.7rem]',
    '21.8': 'w-[21.8rem]',
    '21.9': 'w-[21.9rem]',
    '22.1': 'w-[22.1rem]',
    '22.2': 'w-[22.2rem]',
    '22.3': 'w-[22.3rem]',
    '22.4': 'w-[22.4rem]',
    '22.5': 'w-[22.5rem]',
    '22.6': 'w-[22.6rem]',
    '22.7': 'w-[22.7rem]',
    '22.8': 'w-[22.8rem]',
    '22.9': 'w-[22.9rem]',
    '23.1': 'w-[23.1rem]',
    '23.2': 'w-[23.2rem]',
    '23.3': 'w-[23.3rem]',
    '23.4': 'w-[23.4rem]',
    '23.5': 'w-[23.5rem]',
    '23.6': 'w-[23.6rem]',
    '23.7': 'w-[23.7rem]',
    '23.8': 'w-[23.8rem]',
    '23.9': 'w-[23.9rem]',
    '24.1': 'w-[24.1rem]',
    '24.2': 'w-[24.2rem]',
    '24.3': 'w-[24.3rem]',
    '24.4': 'w-[24.4rem]',
    '24.5': 'w-[24.5rem]',
    '24.6': 'w-[24.6rem]',
    '24.7': 'w-[24.7rem]',
    '24.8': 'w-[24.8rem]',
    '24.9': 'w-[24.9rem]',
    '25.1': 'w-[25.1rem]',
    '25.2': 'w-[25.2rem]',
    '25.3': 'w-[25.3rem]',
    '25.4': 'w-[25.4rem]',
    '25.5': 'w-[25.5rem]',
    '25.6': 'w-[25.6rem]',
    '25.7': 'w-[25.7rem]',
    '25.8': 'w-[25.8rem]',
    '25.9': 'w-[25.9rem]',
    '26.1': 'w-[26.1rem]',
    '26.2': 'w-[26.2rem]',
    '26.3': 'w-[26.3rem]',
    '26.4': 'w-[26.4rem]',
    '26.5': 'w-[26.5rem]',
    '26.6': 'w-[26.6rem]',
    '26.7': 'w-[26.7rem]',
    '26.8': 'w-[26.8rem]',
    '26.9': 'w-[26.9rem]',
    '27.1': 'w-[27.1rem]',
    '27.2': 'w-[27.2rem]',
    '27.3': 'w-[27.3rem]',
    '27.4': 'w-[27.4rem]',
    '27.5': 'w-[27.5rem]',
    '27.6': 'w-[27.6rem]',
    '27.7': 'w-[27.7rem]',
    '27.8': 'w-[27.8rem]',
    '27.9': 'w-[27.9rem]',
    '28.1': 'w-[28.1rem]',
    '28.2': 'w-[28.2rem]',
    '28.3': 'w-[28.3rem]',
    '28.4': 'w-[28.4rem]',
    '28.5': 'w-[28.5rem]',
    '28.6': 'w-[28.6rem]',
    '28.7': 'w-[28.7rem]',
    '28.8': 'w-[28.8rem]',
    '28.9': 'w-[28.9rem]',
    '29.1': 'w-[29.1rem]',
    '29.2': 'w-[29.2rem]',
    '29.3': 'w-[29.3rem]',
    '29.4': 'w-[29.4rem]',
    '29.5': 'w-[29.5rem]',
    '29.6': 'w-[29.6rem]',
    '29.7': 'w-[29.7rem]',
    '29.8': 'w-[29.8rem]',
    '29.9': 'w-[29.9rem]',
    '30.1': 'w-[30.1rem]',
    '30.2': 'w-[30.2rem]',
    '30.3': 'w-[30.3rem]',
    '30.4': 'w-[30.4rem]',
    '30.5': 'w-[30.5rem]',
    '30.6': 'w-[30.6rem]',
    '30.7': 'w-[30.7rem]',
    '30.8': 'w-[30.8rem]',
    '30.9': 'w-[30.9rem]',
    '31.1': 'w-[31.1rem]',
    '31.2': 'w-[31.2rem]',
    '31.3': 'w-[31.3rem]',
    '31.4': 'w-[31.4rem]',
    '31.5': 'w-[31.5rem]',
    '31.6': 'w-[31.6rem]',
    '31.7': 'w-[31.7rem]',
    '31.8': 'w-[31.8rem]',
    '31.9': 'w-[31.9rem]',
    '32.1': 'w-[32.1rem]',
    '32.2': 'w-[32.2rem]',
    '32.3': 'w-[32.3rem]',
    '32.4': 'w-[32.4rem]',
    '32.5': 'w-[32.5rem]',
    '32.6': 'w-[32.6rem]',
    '32.7': 'w-[32.7rem]',
    '32.8': 'w-[32.8rem]',
    '32.9': 'w-[32.9rem]',
    '33.1': 'w-[33.1rem]',
    '33.2': 'w-[33.2rem]',
    '33.3': 'w-[33.3rem]',
    '33.4': 'w-[33.4rem]',
    '33.5': 'w-[33.5rem]',
    '33.6': 'w-[33.6rem]',
    '33.7': 'w-[33.7rem]',
    '33.8': 'w-[33.8rem]',
    '33.9': 'w-[33.9rem]',
    '34.1': 'w-[34.1rem]',
    '34.2': 'w-[34.2rem]',
    '34.3': 'w-[34.3rem]',
    '34.4': 'w-[34.4rem]',
    '34.5': 'w-[34.5rem]',
    '34.6': 'w-[34.6rem]',
    '34.7': 'w-[34.7rem]',
    '34.8': 'w-[34.8rem]',
    '34.9': 'w-[34.9rem]',
    '35.1': 'w-[35.1rem]',
    '35.2': 'w-[35.2rem]',
    '35.3': 'w-[35.3rem]',
    '35.4': 'w-[35.4rem]',
    '35.5': 'w-[35.5rem]',
    '35.6': 'w-[35.6rem]',
    '35.7': 'w-[35.7rem]',
    '35.8': 'w-[35.8rem]',
    '35.9': 'w-[35.9rem]',
    '36.1': 'w-[36.1rem]',
    '36.2': 'w-[36.2rem]',
    '36.3': 'w-[36.3rem]',
    '36.4': 'w-[36.4rem]',
    '36.5': 'w-[36.5rem]',
    '36.6': 'w-[36.6rem]',
    '36.7': 'w-[36.7rem]',
    '36.8': 'w-[36.8rem]',
    '36.9': 'w-[36.9rem]',
    '37.1': 'w-[37.1rem]',
    '37.2': 'w-[37.2rem]',
    '37.3': 'w-[37.3rem]',
    '37.4': 'w-[37.4rem]',
    '37.5': 'w-[37.5rem]',
    '37.6': 'w-[37.6rem]',
    '37.7': 'w-[37.7rem]',
    '37.8': 'w-[37.8rem]',
    '37.9': 'w-[37.9rem]',
    '38.1': 'w-[38.1rem]',
    '38.2': 'w-[38.2rem]',
    '38.3': 'w-[38.3rem]',
    '38.4': 'w-[38.4rem]',
    '38.5': 'w-[38.5rem]',
    '38.6': 'w-[38.6rem]',
    '38.7': 'w-[38.7rem]',
    '38.8': 'w-[38.8rem]',
    '38.9': 'w-[38.9rem]',
    '39.1': 'w-[39.1rem]',
    '39.2': 'w-[39.2rem]',
    '39.3': 'w-[39.3rem]',
    '39.4': 'w-[39.4rem]',
    '39.5': 'w-[39.5rem]',
    '39.6': 'w-[39.6rem]',
    '39.7': 'w-[39.7rem]',
    '39.8': 'w-[39.8rem]',
    '39.9': 'w-[39.9rem]',
    '40.1': 'w-[40.1rem]',
    '40.2': 'w-[40.2rem]',
    '40.3': 'w-[40.3rem]',
    '40.4': 'w-[40.4rem]',
    '40.5': 'w-[40.5rem]',
    '40.6': 'w-[40.6rem]',
    '40.7': 'w-[40.7rem]',
    '40.8': 'w-[40.8rem]',
    '40.9': 'w-[40.9rem]',
    '41.1': 'w-[41.1rem]',
    '41.2': 'w-[41.2rem]',
    '41.3': 'w-[41.3rem]',
    '41.4': 'w-[41.4rem]',
    '41.5': 'w-[41.5rem]',
    '41.6': 'w-[41.6rem]',
    '41.7': 'w-[41.7rem]',
    '41.8': 'w-[41.8rem]',
    '41.9': 'w-[41.9rem]',
    '42.1': 'w-[42.1rem]',
    '42.2': 'w-[42.2rem]',
    '42.3': 'w-[42.3rem]',
    '42.4': 'w-[42.4rem]',
    '42.5': 'w-[42.5rem]',
    '42.6': 'w-[42.6rem]',
    '42.7': 'w-[42.7rem]',
    '42.8': 'w-[42.8rem]',
    '42.9': 'w-[42.9rem]',
    '43.1': 'w-[43.1rem]',
    '43.2': 'w-[43.2rem]',
    '43.3': 'w-[43.3rem]',
    '43.4': 'w-[43.4rem]',
    '43.5': 'w-[43.5rem]',
    '43.6': 'w-[43.6rem]',
    '43.7': 'w-[43.7rem]',
    '43.8': 'w-[43.8rem]',
    '43.9': 'w-[43.9rem]',
    '44.1': 'w-[44.1rem]',
    '44.2': 'w-[44.2rem]',
    '44.3': 'w-[44.3rem]',
    '44.4': 'w-[44.4rem]',
    '44.5': 'w-[44.5rem]',
    '44.6': 'w-[44.6rem]',
    '44.7': 'w-[44.7rem]',
    '44.8': 'w-[44.8rem]',
    '44.9': 'w-[44.9rem]',
    '45.1': 'w-[45.1rem]',
    '45.2': 'w-[45.2rem]',
    '45.3': 'w-[45.3rem]',
    '45.4': 'w-[45.4rem]',
    '45.5': 'w-[45.5rem]',
    '45.6': 'w-[45.6rem]',
    '45.7': 'w-[45.7rem]',
    '45.8': 'w-[45.8rem]',
    '45.9': 'w-[45.9rem]',
    '46.1': 'w-[46.1rem]',
    '46.2': 'w-[46.2rem]',
    '46.3': 'w-[46.3rem]',
    '46.4': 'w-[46.4rem]',
    '46.5': 'w-[46.5rem]',
    '46.6': 'w-[46.6rem]',
    '46.7': 'w-[46.7rem]',
    '46.8': 'w-[46.8rem]',
    '46.9': 'w-[46.9rem]',
    '47.1': 'w-[47.1rem]',
    '47.2': 'w-[47.2rem]',
    '47.3': 'w-[47.3rem]',
    '47.4': 'w-[47.4rem]',
    '47.5': 'w-[47.5rem]',
    '47.6': 'w-[47.6rem]',
    '47.7': 'w-[47.7rem]',
    '47.8': 'w-[47.8rem]',
    '47.9': 'w-[47.9rem]',
    '48.1': 'w-[48.1rem]',
    '48.2': 'w-[48.2rem]',
    '48.3': 'w-[48.3rem]',
    '48.4': 'w-[48.4rem]',
    '48.5': 'w-[48.5rem]',
    '48.6': 'w-[48.6rem]',
    '48.7': 'w-[48.7rem]',
    '48.8': 'w-[48.8rem]',
    '48.9': 'w-[48.9rem]',
    '49.1': 'w-[49.1rem]',
    '49.2': 'w-[49.2rem]',
    '49.3': 'w-[49.3rem]',
    '49.4': 'w-[49.4rem]',
    '49.5': 'w-[49.5rem]',
    '49.6': 'w-[49.6rem]',
    '49.7': 'w-[49.7rem]',
    '49.8': 'w-[49.8rem]',
    '49.9': 'w-[49.9rem]'
};

export default function Column({column, className=""}) {
    const columns = useSelector((state:StoreState) => state.memory.columns);

    const {
        attributes,
        listeners,
        setNodeRef,
        transform,
        transition,
    } = useSortable({id: column.id});

    const style = {
        transform: CSS.Transform.toString(transform),
        transition,
    };




    return <div ref={setNodeRef} style={style}
                className={clsx(className, "shrink-0 h-full overflow-hidden", remText[`${column.width}`])}>
        {
            columns[column.id] && <>
                {
                    !columns[column.id].mode &&
                    <ColumnTypePosts attributes={attributes} listeners={listeners} column={column}/>
                }
                {
                    columns[column.id].mode?.mode === "thread" &&
                    <ColumnTypeThread thread={columns[column.id].mode as ColumnModeThread} column={column}/>
                }
                {
                    columns[column.id].mode?.mode === "settings" &&
                    <ColumnTypeSettings column={column}/>
                }
                {
                    columns[column.id].mode?.mode === "loading" &&
                    <ColumnTypeLoading column={column}/>
                }
            </>
        }
    </div>
}